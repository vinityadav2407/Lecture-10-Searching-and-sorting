Problem statement:-
You are given an integer array/list(ARR) of size N. It contains only 0s, 1s and 2s. Write a solution to sort this array/list in a 'single scan'.

'Single Scan' refers to iterating over the array/list just once or to put it in other words, you will be visiting each element in the array/list just once.

Note:
1. You need to change in the given array/list itself. Hence, no need to return or print anything. 
2. You are not allowed to sort the list/array directly.
Detailed explanation ( Input/output format, Notes, Images )
Constraints :
1 <= t <= 10^2
0 <= N <= 10^5
Time Limit: 1 sec
Sample Input 1:
1
7
0 1 2 0 2 0 1
Sample Output 1:
0 0 0 1 1 2 2 
Explanation:  The array contains three 0s, two 1s, and two 2s. After sorting the array in a single scan, the 0s should come first, then the 1s, and finally the 2s. So the output is 0 0 0 1 1 2 2.
>>>>
>>>>
Solution:->>>>

    public static void sort012(int[] arr) {
        int i = 0;
        int count0 = 0;
        int count1 = 0;
        int count2 = 0;
        while (i < arr.length) {
            if (arr[i] == 0) {
                count0++;
            } else if (arr[i] == 1) {
                count1++;
            } else if (arr[i] == 2) {
                count2++;
            }
            i++;
        }
        i=0;
        while(count0>0){
            arr[i++]=0;
            count0--;
        }
         while(count1>0){
            arr[i++]=1;
            count1--;
        }
         while(count2>0){
            arr[i++]=2;
            count2--;
        }
    }

}
